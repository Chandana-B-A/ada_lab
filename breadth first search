#include <stdio.h>
#include <sys/time.h>
#include <time.h>
#include <sys/resource.h>//heaerfiles

int a[20][20], q[20], visited[20], n, i, j, f = 0, r = -1;

void bfs(int v) {
    // Enqueue all adjacent vertices of v that are not visited
    for (i = 1; i <= n; i++)
        if (a[v][i] && !visited[i])
            q[++r] = i;

    // If there are vertices in the queue, dequeue the first vertex and visit it
    if (f <= r) {
        visited[q[f]] = 1;
        bfs(q[f++]);
    }
}
int main() {
    int start;//variable declaration
    struct timeval tv1, tv2;//structure for time complexity
    struct rusage r_usage;//structure for space complexity
    printf("\nEnter the number of vertices:");
    scanf("%d", &n);//number of vertices
    for (i = 1; i < n; i++) {
        q[i] = 0;
        visited[i] = 0;
    }
    printf("\nEnter graph values in matrix form:\n");
    for (i = 1; i <= n; i++)
        for (j = 1; j <= n; j++)
            scanf("%d", &a[i][j]);//inputs for the adjacency matrix
    printf("\nEnter the starting vertex:");
    scanf("%d", &start);//input for the source vertex
    gettimeofday(&tv1, NULL);//start of the timer
    bfs(start);//function call
    gettimeofday(&tv2, NULL);//end of timer
    printf("\nThe nodes which are reachable are:\n");
    for (i = 1; i <= n; i++)
        if (visited[i])
            printf("%d\t", i);
        else
            printf("\nBFS is not possible");
    printf("\n\nTime of BFS: %f microseconds", (double)(tv2.tv_usec - tv1.tv_usec));//print the time taken
    getrusage(RUSAGE_SELF, &r_usage);//calculate space complexity
    printf("\nMemory usage of BFS: %ld kilobytes", r_usage.ru_maxrss);//print space complexity
    return 0;
}
